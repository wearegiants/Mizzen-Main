{% layout 'theme-updated' %}

{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<div id="prod" class="fs-grid fs-grid-fluid">

  <!-- Product Info & Images -->
  <div class="fs-row equalized" data-equalize-options='{"target":".equalize_child", "minWidth":"980px"}'>
    <div id="prod__info-wrapper" class="fs-cell fs-all-full relative equalize_child">
      <div id="prod__info" class="fs-cell fs-lg-half fs-md-full fs-sm-3 fs-contained fs-right">
        <hr class="invisible compact fs-lg-hide fs-md-6 fs-sm-3 fs-contained">
        <div class="fs-row">
          <div class="fs-cell fs-xl-8 fs-lg-11 fs-md-5 fs-sm-3 fs-centered">
            <div class="equalize_child">
              <div class="product-info__wrapper">
                {% include 'product-info_wag' %}
                <hr class="invisible compact fs-sm-hide">
                <div class="text-center"><a href="/pages/faqs#shipping" style="text-decoration: underline"><small id="prod--note">Free shipping over $100</small></a></div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <hr class="invisible fs-sm-3 fs-md-6 fs-lg-hide">
      <div id="prod__images" class="fs-cell fs-lg-half fs-md-full fs-sm-3 fs-contained">
        {% include 'product-images_wag' %}
      </div>
    </div>
  </div>

  <!-- Performance Section -->
  {% comment %}
  <div id="prod__performance">
    <div class="fs-row">
      <div class="fs-cell fs-lg-11 fs-md-6 fs-sm-3 fs-centered">
        <div class="bg--bgGray">
          {% include 'performance' %}
        </div>
      </div>
    </div>
  </div>
  {% endcomment %}

  {% assign lookbook = product.metafields.lookbook %}
  {% unless lookbook['disable'] == 'true' %}

  <hr class="invisible huge"> 

  <!-- Lookbook Images -->
  <div id="prod__lookbook">
    <div class="fs-row">
      <div class="fs-cell fs-lg-11 fs-md-6 fs-sm-3 fs-centered">
        {% include 'product_lookbook' %}
      </div>
    </div>
  </div>

  {% endunless %}

  <hr class="invisible"> 

  <div id="prod__related">
    <div class="fs-row">
      <div class="fs-cell fs-lg-10 fs-md-6 fs-sm-3 fs-centered">
        {% include 'related-products' %}
      </div>
    </div>
  </div>

</div>

<hr class="invisible"> 


<script>
  
var selectCallback = function(variant, selector) {

  if (variant) {
    
    // Swap image.
    if (variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }
    
    // Selected a valid variant that is available.
    if (variant.available) {
          
      // Enabling add to cart button.
      jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
    
      // If item is backordered yet can still be ordered, we'll show special message.
      if (variant.inventory_management && variant.inventory_quantity <= 0) {
        jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
        jQuery('#backorder').removeClass("hidden");
      } else {
        jQuery('#backorder').addClass("hidden");
      }
      
    } else {
      // Variant is sold out.
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
    }
    
    // Whether the variant is in stock or not, we can update the price and compare at price.
    if ( variant.compare_at_price > variant.price ) {
      jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
    } else {
      jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
    }    

  } else {
    // variant doesn't exist.
    jQuery('#product-price').empty();
    jQuery('#backorder').addClass('hidden');
    jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
  }

};
  
jQuery(function($) {

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
  
  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>').addClass('fs-cell fs-lg-8 fs-md-5 fs-sm-3 fs-centered');
  {% endif %}

});

Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>

{% if product.options.size == 1 %}
  <script>
  var $addToCartForm = $('form[action="/cart/add"]');
  if (window.MutationObserver && $addToCartForm.length) {
    if (typeof observer === 'object' && typeof observer.disconnect === 'function') {
      observer.disconnect();
    }
    var config = { childList: true, subtree: true };
    var observer = new MutationObserver(function() { 
      {% for variant in product.variants %}
        {% if variant.metafields.info.visibility contains 'hidden' %}
          jQuery('.single-option-selector option:eq({{ forloop.index0 }})').wrap('<span/>');
        {% endif %}
      {% endfor %}
      jQuery('.single-option-selector').trigger('change');
      observer.disconnect();
    });  
    observer.observe($addToCartForm[0], config);
  }
  </script>
{% endif %}

<script type='text/javascript'>
    try {
        var ch212 = ch212 || []; ch212['token'] = '4de414786ff340dca503409fd560b3ba'; ch212['ts'] = new Date().getTime();
        (function () {
            var ch = document.createElement('script'); ch.type = 'text/javascript'; ch.async = true;
            ch.src = '//script.clotheshor.se/widget/script?token=' + ch212['token'] + '&ts=' + ch212['ts'];
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ch, s);
        })();
    } catch (ex) { console.log(ex)}
</script>
